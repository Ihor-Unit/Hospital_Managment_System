<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>